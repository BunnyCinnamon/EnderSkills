buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net/' }
        maven { url = "http://files.minecraftforge.net/maven" }
        maven {
            name "ModMaven"
            url "https://modmaven.dev"
        }
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:3.+'
        classpath 'com.github.jengelman.gradle.plugins:shadow:4.0.4'
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'com.github.johnrengelman.shadow'

version = "1.12.2-${mayor}.${noapi}.${minor}.${patch}${extra}"
group = "arekkuusu.enderskills"
archivesBaseName = "EnderSkills"

compileJava.options.encoding = "UTF-8"
sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

minecraft {
    mappings channel: 'snapshot', version: '20171003-1.12'

    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
        }

        server {

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
        }
    }
}

repositories {
    flatDir {
        dirs 'lib'
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2860'

    compileOnly (name: "EventHelper-1.12.2-2.6.2-dev")
    compile (name: "com.expression.parser-2.0.0")
    implementation (name: "com.expression.parser-2.0.0")
    shadow(name: 'com.expression.parser-2.0.0')
}

processResources {

}

sourceSets {
    main {
        output.resourcesDir = file('build/combined')
        java.outputDir = file('build/combined')
    }
}

jar {
    manifest {
        attributes([
                "Specification-Title": "enderskills",
                "Specification-Vendor": archivesBaseName,
                "Specification-Version": version,
                "Implementation-Title": project.name,
                "Implementation-Version": "${version}",
                "Implementation-Vendor" : archivesBaseName,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

project.tasks.build.dependsOn project.tasks.shadowJar

shadowJar {
    project.configurations.shadow.setTransitive(true);
    configurations = [project.configurations.shadow]

    classifier ''
}

reobf {
    shadowJar {}
}

artifacts {
    archives shadowJar
}
